kind: ConfigMap
apiVersion: v1
metadata:
  name: descheduler-operator
  namespace: openshift-operator-lifecycle-manager

data:
  customResourceDefinitions: |-
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: deschedulers.descheduler.io
      spec:
        group: descheduler.io
        names:
          kind: Descheduler
          listKind: DeschedulerList
          plural: deschedulers
          singular: descheduler
        scope: Namespaced
        version: v1alpha1
  clusterServiceVersions: |-
   - apiVersion: operators.coreos.com/v1alpha1
     kind: ClusterServiceVersion
     metadata:
       name: descheduler.v0.0.1
       namespace: placeholder
       annotations:
         longDescription: |
           # Descheduler for Kubernetes

           ## Introduction

           Scheduling in Kubernetes is the process of binding pending pods to nodes, and is performed by
           a component of Kubernetes called kube-scheduler. The scheduler's decisions, whether or where a
           pod can or can not be scheduled, are guided by its configurable policy which comprises of set of
           rules, called predicates and priorities. The scheduler's decisions are influenced by its view of
           a Kubernetes cluster at that point of time when a new pod appears first time for scheduling.
           As Kubernetes clusters are very dynamic and their state change over time, there may be desired
           to move already running pods to some other nodes for various reasons

           * Some nodes are under or over utilized.
           * The original scheduling decision does not hold true any more, as taints or labels are added to
           or removed from nodes, pod/node affinity requirements are not satisfied any more.
           * Some nodes failed and their pods moved to other nodes.
            New nodes are added to clusters.

           Consequently, there might be several pods scheduled on less desired nodes in a cluster.
           Descheduler, based on its policy, finds pods that can be moved and evicts them. Please
           note, in current implementation, descheduler does not schedule replacement of evicted pods
           but relies on the default scheduler for that.

           ## Compatibility matrix

               Descheduler  | supported Kubernetes version
               -------------|-----------------------------
               0.4          | 1.9+
               0.1-0.3      | 1.7-1.8

           ## Note

           This project is under active development, and is not intended for production use.
           Any api could be changed any time with out any notice. That said, your feedback is
           very important and appreciated to make this project more stable and useful.
         description: An operator to run the OpenShift descheduler
         categories: openshift optional
         createdAt: 2019/11/15
         certifiedLevel: Primed
         repository: https://descheduler.redhat.com
         containerImage: quay.io/redhat/descheduler
         support: Red Hat
         healthIndex: B
     spec:
       maintainers:
       - name: Red Hat
         email: support@redhat.com      
       provider:
         name: Red Hat
       install:
         strategy: deployment
         spec:
           clusterPermissions:
           - serviceAccountName: openshift-descheduler
             rules:
             - apiGroups: [""]
               resources: ["services", "pods", "configmaps", "secrets", "names", "nodes","pods/eviction"]
               verbs: ["*"] 
             - apiGroups: ["apps"]
               resources: ["deployments"]
               verbs: ["*"]
             - apiGroups: ["batch", "extensions"]
               resources: ["jobs"]
               verbs: ["*"]
             - apiGroups: ["descheduler.io"]
               resources: ["*"]
               verbs: ["*"]      
           deployments:
             - name: descheduler-operator
               spec:
                 replicas: 1
                 selector:
                   matchLabels:
                     app: descheduler-operator
                 template:
                   metadata:
                     labels:
                       app: descheduler-operator
                   spec:
                     containers:
                     - name: descheduler-operator
                       image: docker.io/ravig/descheduler-operator:v0.0.6
                       command:
                       - descheduler-operator
                       imagePullPolicy: Always
                       env:
                       - name: MY_POD_NAMESPACE
                         valueFrom:
                           fieldRef:
                             fieldPath: metadata.namespace
                       - name: MY_POD_NAME
                         valueFrom:
                           fieldRef:
                             fieldPath: metadata.name
                       - name: WATCH_NAMESPACE
                         valueFrom:
                           fieldRef:
                             fieldPath: metadata.namespace
                       - name: OPERATOR_NAME
                         value: "descheduler-operator"
                     restartPolicy: Always
                     terminationGracePeriodSeconds: 5
                     serviceAccountName: openshift-descheduler
                     serviceAccount: openshift-descheduler
       customresourcedefinitions:
         owned:
           - description: Represents an instance of a Descheduler application
             displayName: Descheduler Operator
             kind: Descheduler
             name: deschedulers.descheduler.io
             version: v1alpha1
       version: 0.0.1
       displayName: Descheduler
       labels:
         olm-owner-enterprise-app: descheduler-operator
         olm-status-descriptors: descheduler.v0.0.1
  packages: |-
    - packageName: descheduler
      channels:
      - name: alpha
        currentCSV: descheduler.v0.0.1